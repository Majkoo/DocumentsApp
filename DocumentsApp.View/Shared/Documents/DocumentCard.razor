@using DocumentsApp.Shared.Dtos.DocumentDtos
@using DocumentsApp.Shared.Enums

@inject ContextMenuService ContextMenuService
@inject DialogService DialogService

<RadzenCard class="w-100 doc-card" @onclick="OnClick" ContextMenu="@(ShowContextMenuWithItems)">
    <div>
        <RadzenText
            TextStyle="TextStyle.H5"
            Text="@Document.Name" />
        <hr>
        <RadzenText
            TextStyle="TextStyle.Body1"
            Text="@(Document.Description ?? "No description")" />
    </div>
    <div class="d-flex justify-content-end">
        <RadzenIcon Icon="edit" class="p-2"/>
        <RadzenIcon Icon="share" class="p-2"/>
        <RadzenIcon Icon="delete" class="p-2"/>
    </div>
</RadzenCard>

@code {

    [Parameter]
    public GetDocumentDto Document { get; set; } = new GetDocumentDto();

    private List<ContextMenuItem> _contextMenuItems = new()
    {
        new ContextMenuItem() { Text = "View Document", Value = DocumentContextMenuAction.View },
        new ContextMenuItem() { Text = "Edit Document", Value = DocumentContextMenuAction.Edit },
        new ContextMenuItem() { Text = "Share Document", Value = DocumentContextMenuAction.Share },
        new ContextMenuItem() { Text = "Delete Document", Value = DocumentContextMenuAction.Delete },
    };


    void ShowContextMenuWithItems(MouseEventArgs args)
    {
        ContextMenuService.Open(args, _contextMenuItems, OnMenuItemClick);
    }

    void OnMenuItemClick(MenuItemEventArgs args)
    {
        ContextMenuService.Close();
        switch (args.Value)
        {
            case DocumentContextMenuAction.View:
            {
                DialogService.Open($"View {Document.Name}",
                    ds => @<ViewDocument DocumentDto="Document" />,
                    new DialogOptions(){ CloseDialogOnEsc = true, CloseDialogOnOverlayClick = true, CssClass = "big-dialog"}
                    );

                break;
            }
            case DocumentContextMenuAction.Edit:
            {
                DialogService.Open($"Edit {Document.Name}",
                    ds => @<EditDocument DocumentDto="Document" />,
                    new DialogOptions(){ CssClass = "big-dialog" }
                    );

                break;
            }
            case DocumentContextMenuAction.Share:
            {
                DialogService.Open($"Share {Document.Name}",
                    ds => @<ShareDocument DocumentDto="Document" />,
                    new DialogOptions(){ CloseDialogOnEsc = true, CloseDialogOnOverlayClick = true}
                    );

                break;
            }
            case DocumentContextMenuAction.Delete:
            {
                DialogService.Open($"Delete {Document.Name}",
                    ds => @<DeleteDocument DocumentDto="Document" />,
                    new DialogOptions(){ CloseDialogOnEsc = true, CloseDialogOnOverlayClick = true}
                    );

                break;
            }
        }
    }

    void OnClick()
    {
        DialogService.Open($"View {Document.Name}",
            ds => @<ViewDocument DocumentDto="Document" />,
            new DialogOptions(){ CloseDialogOnEsc = true, CloseDialogOnOverlayClick = true, CssClass = "big-dialog"}
            );
    }
}