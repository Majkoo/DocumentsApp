@using DocumentsApp.Shared.Dtos.DocumentDtos
@using DocumentsApp.Shared.Notifications
@inject IDocumentService DocumentService
@inject DialogService DialogService
@inject NotificationService NotificationService

<RadzenTemplateForm
    Data="AddDocumentDto"
    TItem="AddDocumentDto"
    Submit="OnSubmit">

    <div class="container my-3 px-1 px-lg-4">

        <div class="mb-4">
            <RadzenLabel Text="Document name:" class="fw-bold"/>
            <RadzenTextBox
                Placeholder="Enter document name..."
                Name="DocName"
                @bind-Value="@AddDocumentDto.Name"/>
            <RadzenRequiredValidator
                Component="DocName"
                Popup="true"
                Text="Document name is required"
                Style="position: absolute; display: block"/>
            <RadzenLengthValidator
                Component="DocName"
                Popup="true"
                Text="Document name should be equal or less than 20 characters"
                Max="20"
                Style="position: absolute; display: block"/>

        </div>

        <div class="d-flex justify-content-end gap-3">
            <RadzenButton
                ButtonStyle="ButtonStyle.Danger"
                ButtonType="ButtonType.Button"
                Click="OnCancel"
                Text="Cancel"/>

            <RadzenButton
                ButtonStyle="ButtonStyle.Primary"
                ButtonType="ButtonType.Submit"
                Text="Submit"/>
        </div>



    </div>

</RadzenTemplateForm>


@code {

    [Parameter]
    public EventCallback<GetDocumentDto> OnDocumentCreated { get; set; }

    private AddDocumentDto AddDocumentDto { get; set; } = new AddDocumentDto { Content = "",};

    private async Task OnSubmit()
    {
        var newDoc = await DocumentService.AddDocumentAsync(AddDocumentDto);
        DialogService.Close();

        NotificationService.Notify(new SuccessNotification("Success", $"New document \"{newDoc.Name}\" created successfully!"));

        await OnDocumentCreated.InvokeAsync(newDoc);

        DialogService.Open($"Edit {newDoc.Name}",
            ds => @<EditDocument DocumentDto="newDoc" />,
            new DialogOptions(){ CssClass = "big-dialog" }
            );
    }

    private void OnCancel()
    {
        DialogService.Close();
    }

}