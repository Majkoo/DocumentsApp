@page "/my-documents"
@using DocumentsApp.Shared.Dtos.DocumentDtos

@inject IJSRuntime JsRuntime

@attribute [Authorize]

<PageTitle>DocumentsApp - My Documents</PageTitle>

<div class="row p-3 pb-5 mb-5">

    <div class="p-2 col-6 col-lg-3 col-xl-2">
        <AddNewDocumentCard />
    </div>

        @foreach (var doc in _documentDtos)
        {
            <div class="p-2 col-6 col-lg-3 col-xl-2">
                <DocumentCard Document="@doc" />
            </div>
        }

        @* Mock paginator *@

        <div class="fixed-bottom border-top bg-white pagin-footer">
            <RadzenPager
                HorizontalAlign="HorizontalAlign.Right"
                Count="60"
                PageSize="5"
                PageNumbersCount="5"
                PageChanged="@FetchItems" />

        </div>


</div>

@code {
    [CascadingParameter]
    private Task<AuthenticationState>? AuthState { get; set; }

    readonly List<GetDocumentDto> _documentDtos = new List<GetDocumentDto>();

    protected override async Task OnInitializedAsync()
    {
        await FetchItems();
    }

    private async Task FetchItems()
    {
        await JsRuntime.InvokeVoidAsync("OnScrollEvent");

        _documentDtos.Clear();
        for (int i = 0; i < 11; i++)
        {
            _documentDtos.Add(
                new GetDocumentDto()
                {
                    Name = "Lipsum",
                    Content = "lorem ipsum dolor sit amet",
                    Description = "lorem ipsum"
                }
                );
        }


    }

}