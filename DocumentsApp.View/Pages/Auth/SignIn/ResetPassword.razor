@page "/auth/resetpassword"
@using DocumentsApp.Shared.Dtos.AccountDtos
@using DocumentsApp.Shared.Notifications
@using System.Text

@inject NavigationManager NavigationManager
@inject NotificationService NotificationService
@inject IAccountService AccountService

<div class="w-100 text-left d-flex justify-content-center align-items-center my-4">

    <RadzenTemplateForm
        TItem="ResetPasswordDto"
        Data="@_resetPasswordDto"
        Style="width: 100%; max-width: 450px"
        Submit="() => OnSubmit(_resetPasswordDto)">

        <RadzenFieldset>

            <h2 class="text-center mt-2 mb-4">
                <strong>Reset your password</strong>
            </h2>

            <div class="mb-4">

                <RadzenLabel Text="New password"/>

                <RadzenPassword
                    Placeholder="Enter new password"
                    Name="Password"
                    Style="display: block"
                    @bind-Value="@_resetPasswordDto.NewPassword"/>

                <RadzenRequiredValidator
                    Component="Password"
                    Text="Field is required"
                    Popup="@true"
                    Style="position: absolute"/>

            </div>

            <div class="mb-4">

                <RadzenLabel Text="Confirm password"/>

                <RadzenPassword
                    Placeholder="Confirm new password..."
                    Name="ConfirmPassword"
                    Style="display: block"
                    @bind-Value="@_resetPasswordDto.ConfirmNewPassword"/>

                <RadzenRequiredValidator
                    Component="ConfirmPassword"
                    Text="Field is required"
                    Popup="@true" Style="position: absolute"/>
                
                <RadzenCompareValidator
                    Visible="@(!string.IsNullOrEmpty(_resetPasswordDto.ConfirmNewPassword))"
                    Value="@_resetPasswordDto.NewPassword"
                    Component="ConfirmPassword"
                    Text="Passwords should be the same"
                    Popup="@true"
                    Style="position: absolute"/>

            </div>

            <div class="w-100 text-end">
                <RadzenButton ButtonType="ButtonType.Submit" ButtonStyle="ButtonStyle.Primary" Text="Submit"></RadzenButton>
            </div>
            
        </RadzenFieldset>

    </RadzenTemplateForm>

</div>


@code {
    [Parameter]
    [SupplyParameterFromQuery(Name = nameof(Token))]
    public string? Token { get; set; }

    [Parameter]
    [SupplyParameterFromQuery(Name = nameof(Email))]
    public string? Email { get; set; }
    
    private readonly ResetPasswordDto _resetPasswordDto = new ResetPasswordDto();
    
    private async Task OnSubmit(ResetPasswordDto dto)
    {
        var result = await AccountService.ResetPasswordAsync(dto, Token, Email);
        
        if (result.Succeeded)
        {
            NotificationService.Notify(new SuccessNotification("Success", "Successfully reset your password"));
            NavigationManager.NavigateTo("/auth/signin");
        }
        else
        {
            var sb = new StringBuilder();

            foreach (var identityError in result.Errors)
            {
                sb.Append($"{identityError.Description}\n");
            }
            NotificationService.Notify(new ErrorNotification("Could not reset password", sb.ToString()));
        }
    }
}