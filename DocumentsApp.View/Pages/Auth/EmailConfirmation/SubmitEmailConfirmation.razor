@page "/auth/submitemailconfirmation"
@using DocumentsApp.Shared.Notifications
@using DocumentsApp.Shared.Dtos.AccountDtos

@inject IAccountService AccountService
@inject NotificationService NotificationService

<div class="w-100 text-left d-flex justify-content-center align-items-center my-4">

    <RadzenTemplateForm
        TItem="SubmitEmailDto"
        Data="@_emailDto"
        Style="width: 100%; max-width: 450px"
        Submit="() => OnSubmit(_emailDto)">

        <RadzenFieldset>

            <h2 class="text-center mt-2 mb-4">
                <strong>Send account confirmation email</strong>
            </h2>

            <div class="mb-4">

                <RadzenTextBox
                    Placeholder="Enter email..."
                    Name="Email"
                    Style="display: block"
                    @bind-Value="@_emailDto.Email"/>

                <RadzenRequiredValidator
                    Component="Email"
                    Text="Email is required"
                    Popup="@true"
                    Style="position: absolute"/>

                <RadzenEmailValidator
                    Component="Email"
                    Text="Provide a valid email address"
                    Popup="@true"
                    Style="position: absolute"/>
            </div>

            <div class="w-100 text-end">
                <RadzenButton ButtonType="ButtonType.Submit" ButtonStyle="ButtonStyle.Primary" Text="Submit"></RadzenButton>
            </div>

        </RadzenFieldset>
 
    </RadzenTemplateForm>

</div>


@code {

    private SubmitEmailDto _emailDto = new();

    private async Task OnSubmit(SubmitEmailDto emailDto)
    {
        var result = await AccountService.SubmitEmailConfirmationAsync(emailDto.Email);
        
        if(result is false)
            NotificationService.Notify(new ErrorNotification("Email", "No user with such email"));
        else
        {
            
            NotificationService.Notify(new InfoNotification("Email", "Confirmation email sent"));    
        }
    }
}